<?php defined ('IN_KEKE' ) or die ( 'Access Denied' );
	class Keke_witkey_task_wbdj  extends Model {
	    protected static $_data = array ();
	     function  __construct(){ 			 parent::__construct ( 'witkey_task_wbdj' );		 }	    
	    		public function getWbdj_id(){			 return self::$_data ['wbdj_id']; 		}		public function getTask_id(){			 return self::$_data ['task_id']; 		}		public function getWb_platform(){			 return self::$_data ['wb_platform']; 		}		public function getWb_content(){			 return self::$_data ['wb_content']; 		}		public function getWb_img(){			 return self::$_data ['wb_img']; 		}		public function getClick_price(){			 return self::$_data ['click_price']; 		}		public function getProm_url(){			 return self::$_data ['prom_url']; 		}		public function getPay_amount(){			 return self::$_data ['pay_amount']; 		}		public function getClick_count(){			 return self::$_data ['click_count']; 		}		public function getWhere(){			 return self::$_where; 		}
	    		public function setWbdj_id($value){ 			 self::$_data ['wbdj_id'] = $value;			 return $this ; 		}		public function setTask_id($value){ 			 self::$_data ['task_id'] = $value;			 return $this ; 		}		public function setWb_platform($value){ 			 self::$_data ['wb_platform'] = $value;			 return $this ; 		}		public function setWb_content($value){ 			 self::$_data ['wb_content'] = $value;			 return $this ; 		}		public function setWb_img($value){ 			 self::$_data ['wb_img'] = $value;			 return $this ; 		}		public function setClick_price($value){ 			 self::$_data ['click_price'] = $value;			 return $this ; 		}		public function setProm_url($value){ 			 self::$_data ['prom_url'] = $value;			 return $this ; 		}		public function setPay_amount($value){ 			 self::$_data ['pay_amount'] = $value;			 return $this ; 		}		public function setClick_count($value){ 			 self::$_data ['click_count'] = $value;			 return $this ; 		}		public function setWhere($value){ 			 self::$_where = $value;			 return $this; 		}		public function setData($array){ 			self::$_data = array_filter($array,array('Model','remove_null')); 			return $this; 		} 
	    /**		 * insert into  keke_witkey_task_wbdj  ,or add new record		 * @return int last_insert_id		 */		function create($return_last_id=1){		 $res = $this->_db->insert ( $this->_tablename, self::$_data, $return_last_id, $this->_replace ); 		 $this->reset(); 			 return $res; 		 } 
	    /**		 * update table keke_witkey_task_wbdj		 * @return int affected_rows		 */		function update() {				if ($this->getWhere()) { 					$res =  $this->_db->update ( $this->_tablename, self::$_data, $this->getWhere());				} elseif (isset ( self::$_data ['wbdj_id'] )) { 						self::$_where = array ('wbdj_id' => self::$_data ['wbdj_id'] );						unset(self::$_data['wbdj_id']);						$res = $this->_db->update ( $this->_tablename, self::$_data, $this->getWhere() );				}				$this->reset();				return $res;		}
	    /**		 * query table: keke_witkey_task_wbdj,if isset where return where record,else return all record		 * @return array 		 */		function query($fields = '*',$cache_time = 0){ 			 empty ( $fields ) and $fields = '*';			 if($this->getWhere()){ 				 $sql = "select $fields from $this->_tablename where ".$this->getWhere(); 			 }else{ 				 $sql = "select $fields from $this->_tablename"; 			 } 			 empty($fields) and $fields = '*'; 			 $this->reset();			 return $this->_db->cached ( $cache_time )->cache_data ( $sql );		 } 
	    /**		 * query count keke_witkey_task_wbdj records,if iset where query by where 		 * @return int count records		 */		function count(){ 			 if($this->getWhere()){ 				 $sql = "select count(*) as count from $this->_tablename where ".$this->getWhere(); 			 } 			 else{ 				 $sql = "select count(*) as count from $this->_tablename"; 			 } 			 $this->reset(); 			 return $this->_db->get_count ( $sql ); 		 } 
	    /**		 * delete table keke_witkey_task_wbdj, if isset where delete by where 		 * @return int deleted affected_rows 		 */		function del(){ 			 if($this->getWhere()){ 				 $sql = "delete from $this->_tablename where ".$this->getWhere(); 			 } 			 else{ 				 $sql = "delete from $this->_tablename where wbdj_id = $this->_wbdj_id "; 			 } 			 $this->reset(); 			 return $this->_db->query ( $sql, Database::DELETE ); 		 } 
   } //end 