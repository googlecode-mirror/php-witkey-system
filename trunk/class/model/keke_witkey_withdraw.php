<?php defined ('IN_KEKE' ) or die ( 'Access Denied' );
	class Keke_witkey_withdraw  extends Model {
	    protected static $_data = array ();
	     function  __construct(){ 			 parent::__construct ( 'witkey_withdraw' );		 }	    
	    		public function getWid(){			 return self::$_data ['wid']; 		}		public function getCash(){			 return self::$_data ['cash']; 		}		public function getUid(){			 return self::$_data ['uid']; 		}		public function getUsername(){			 return self::$_data ['username']; 		}		public function getBank_username(){			 return self::$_data ['bank_username']; 		}		public function getBank_name(){			 return self::$_data ['bank_name']; 		}		public function getBank_account(){			 return self::$_data ['bank_account']; 		}		public function getStatus(){			 return self::$_data ['status']; 		}		public function getOn_time(){			 return self::$_data ['on_time']; 		}		public function getOp_uid(){			 return self::$_data ['op_uid']; 		}		public function getOp_username(){			 return self::$_data ['op_username']; 		}		public function getOp_time(){			 return self::$_data ['op_time']; 		}		public function getType(){			 return self::$_data ['type']; 		}		public function getMem(){			 return self::$_data ['mem']; 		}		public function getWhere(){			 return self::$_where; 		}
	    		public function setWid($value){ 			 self::$_data ['wid'] = $value;			 return $this ; 		}		public function setCash($value){ 			 self::$_data ['cash'] = $value;			 return $this ; 		}		public function setUid($value){ 			 self::$_data ['uid'] = $value;			 return $this ; 		}		public function setUsername($value){ 			 self::$_data ['username'] = $value;			 return $this ; 		}		public function setBank_username($value){ 			 self::$_data ['bank_username'] = $value;			 return $this ; 		}		public function setBank_name($value){ 			 self::$_data ['bank_name'] = $value;			 return $this ; 		}		public function setBank_account($value){ 			 self::$_data ['bank_account'] = $value;			 return $this ; 		}		public function setStatus($value){ 			 self::$_data ['status'] = $value;			 return $this ; 		}		public function setOn_time($value){ 			 self::$_data ['on_time'] = $value;			 return $this ; 		}		public function setOp_uid($value){ 			 self::$_data ['op_uid'] = $value;			 return $this ; 		}		public function setOp_username($value){ 			 self::$_data ['op_username'] = $value;			 return $this ; 		}		public function setOp_time($value){ 			 self::$_data ['op_time'] = $value;			 return $this ; 		}		public function setType($value){ 			 self::$_data ['type'] = $value;			 return $this ; 		}		public function setMem($value){ 			 self::$_data ['mem'] = $value;			 return $this ; 		}		public function setWhere($value){ 			 self::$_where = $value;			 return $this; 		}		public function setData($array){ 			self::$_data = array_filter($array,array('Model','remove_null')); 			return $this; 		} 
	    /**		 * insert into  keke_witkey_withdraw  ,or add new record		 * @return int last_insert_id		 */		function create($return_last_id=1){		 $res = $this->_db->insert ( $this->_tablename, self::$_data, $return_last_id, $this->_replace ); 		 $this->reset(); 			 return $res; 		 } 
	    /**		 * update table keke_witkey_withdraw		 * @return int affected_rows		 */		function update() {				if ($this->getWhere()) { 					$res =  $this->_db->update ( $this->_tablename, self::$_data, $this->getWhere());				} elseif (isset ( self::$_data ['wid'] )) { 						self::$_where = array ('wid' => self::$_data ['wid'] );						unset(self::$_data['wid']);						$res = $this->_db->update ( $this->_tablename, self::$_data, $this->getWhere() );				}				$this->reset();				return $res;		}
	    /**		 * query table: keke_witkey_withdraw,if isset where return where record,else return all record		 * @return array 		 */		function query($fields = '*',$cache_time = 0){ 			 empty ( $fields ) and $fields = '*';			 if($this->getWhere()){ 				 $sql = "select $fields from $this->_tablename where ".$this->getWhere(); 			 }else{ 				 $sql = "select $fields from $this->_tablename"; 			 } 			 empty($fields) and $fields = '*'; 			 $this->reset();			 return $this->_db->cached ( $cache_time )->cache_data ( $sql );		 } 
	    /**		 * query count keke_witkey_withdraw records,if iset where query by where 		 * @return int count records		 */		function count(){ 			 if($this->getWhere()){ 				 $sql = "select count(*) as count from $this->_tablename where ".$this->getWhere(); 			 } 			 else{ 				 $sql = "select count(*) as count from $this->_tablename"; 			 } 			 $this->reset(); 			 return $this->_db->get_count ( $sql ); 		 } 
	    /**		 * delete table keke_witkey_withdraw, if isset where delete by where 		 * @return int deleted affected_rows 		 */		function del(){ 			 if($this->getWhere()){ 				 $sql = "delete from $this->_tablename where ".$this->getWhere(); 			 } 			 else{ 				 $sql = "delete from $this->_tablename where wid = $this->_wid "; 			 } 			 $this->reset(); 			 return $this->_db->query ( $sql, Database::DELETE ); 		 } 
   } //end 